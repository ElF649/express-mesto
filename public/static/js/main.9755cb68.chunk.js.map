{"version":3,"sources":["components/Header.js","contexts/CurrentUserContext.js","components/Card.js","utils/Api.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/ImagePopup.js","components/App.js","serviceWorker.js","index.js","images/header__logo.svg"],"names":["Header","className","alt","src","headerLogo","CurrentUserContext","React","createContext","Card","props","currentUser","useContext","isOwn","card","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","onClick","onCardDelete","link","onCardClick","name","onCardLike","length","api","baseURL","key","this","_baseURL","_key","res","ok","json","Promise","reject","status","fetch","headers","authorization","then","_getResponseData","about","method","body","JSON","stringify","cardId","avatar","Main","onEditAvatar","onEditProfile","width","height","viewBox","fill","xmlns","d","onAddPlace","cards","map","item","Footer","PopupWithForm","isOpen","onClose","title","noValidate","onSubmit","children","EditProfilePopup","useState","setName","description","setDescription","useEffect","e","preventDefault","onUpdateUser","id","onChange","target","value","required","minLength","maxLength","type","pattern","EditAvatarPopup","createRef","onUpdateAvatar","current","placeholder","ref","AddPlacePopup","ImagePopup","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setIsSelectedCard","setCurrentUser","setCards","closeAllPopups","getInitialCards","initialCards","catch","err","console","log","getProfileInfo","userInfo","Provider","changeLikeCardStatus","newCard","newCards","c","deleteCard","filter","data","postNewCard","patchProfileInfo","info","patchAvatar","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"sOAWeA,MARf,WACI,OACI,4BAAQC,UAAU,UACd,yBAAKA,UAAU,eAAeC,IAAI,eAAeC,IAAKC,QCLrDC,EAAqBC,IAAMC,gBCuCzBC,MArCf,SAAcC,GACV,IAAMC,EAAcJ,IAAMK,WAAWN,GAW/BO,EAAQH,EAAMI,KAAKC,MAAMC,MAAQL,EAAYK,IAE7CC,EAAyB,UACxBJ,EAAQ,iCAAmC,iCAE5CK,EAAUR,EAAMI,KAAKK,MAAMC,MAAK,SAAAC,GAAC,OAAIA,EAAEL,MAAQL,EAAYK,OAG3DM,EAAuB,UAAOJ,EAAU,mDAAqD,wBAEnG,OACI,yBAAKhB,UAAU,WACX,4BAAQA,UAAWe,EAA2BM,QAhBtD,WACIb,EAAMc,aAAad,EAAMI,SAgBrB,yBAAKZ,UAAU,iBAAiBE,IAAG,UAAKM,EAAMI,KAAKW,MAAQF,QAvBnE,WACIb,EAAMgB,YAAYhB,EAAMI,SAuBpB,yBAAKZ,UAAU,sBACX,wBAAIA,UAAU,wBAAwBQ,EAAMI,KAAKa,MACjD,yBAAKzB,UAAU,yBACX,4BAAQA,UAAWoB,EAAyBC,QAxB5D,WACIb,EAAMkB,WAAWlB,EAAMI,SAwBX,uBAAGZ,UAAU,yBAAyBQ,EAAMI,KAAKK,MAAMU,Y,cCuE9DC,EAAM,I,WAvGf,cAA+B,IAAjBC,EAAgB,EAAhBA,QAASC,EAAO,EAAPA,IAAO,oBAC1BC,KAAKC,SAAWH,EAChBE,KAAKE,KAAOH,E,6DAECI,GACb,OAAIA,EAAIC,GACGD,EAAIE,OAERC,QAAQC,OAAR,gDAA0BJ,EAAIK,W,wCAEtB,IAAD,OACd,OAAOC,MAAM,GAAD,OAAIT,KAAKC,SAAT,UAA2B,CACnCS,QAAS,CACLC,cAAeX,KAAKE,QAGvBU,MAAK,SAAAT,GACF,OAAO,EAAKU,iBAAiBV,Q,uCAGvB,IAAD,OACb,OAAOM,MAAM,GAAD,OAAIT,KAAKC,SAAT,aAA8B,CACtCS,QAAS,CACLC,cAAeX,KAAKE,QAGvBU,MAAK,SAAAT,GACF,OAAO,EAAKU,iBAAiBV,Q,0CAGN,IAAD,OAAfT,EAAe,EAAfA,KAAMoB,EAAS,EAATA,MACrB,OAAOL,MAAM,GAAD,OAAIT,KAAKC,SAAT,aAA8B,CACtCc,OAAQ,QACRL,QAAS,CACLC,cAAeX,KAAKE,KACpB,eAAgB,oBAEpBc,KAAMC,KAAKC,UAAU,CACjBxB,KAAMA,EACNoB,MAAOA,MAGVF,MAAK,SAAAT,GACF,OAAO,EAAKU,iBAAiBV,Q,qCAIZ,IAAD,OAAdT,EAAc,EAAdA,KAAMF,EAAQ,EAARA,KAChB,OAAOiB,MAAM,GAAD,OAAIT,KAAKC,SAAT,UAA2B,CACnCc,OAAQ,OACRL,QAAS,CACLC,cAAeX,KAAKE,KACpB,eAAgB,oBAEpBc,KAAMC,KAAKC,UAAU,CACjBxB,KAAMA,EACNF,KAAMA,MAGToB,MAAK,SAACT,GACH,OAAO,EAAKU,iBAAiBV,Q,2CAGpBgB,EAAQlC,GAAU,IAAD,OAClC,OAAOwB,MAAM,GAAD,OAAIT,KAAKC,SAAT,wBAAiCkB,GAAU,CACnDJ,OAAO,GAAD,OAAK9B,EAAU,MAAQ,UAC7ByB,QAAS,CACLC,cAAeX,KAAKE,QAGvBU,MAAK,SAACT,GACH,OAAO,EAAKU,iBAAiBV,Q,iCAG9BgB,GAAS,IAAD,OACf,OAAOV,MAAM,GAAD,OAAIT,KAAKC,SAAT,kBAA2BkB,GAAU,CAC7CJ,OAAQ,SACRL,QAAS,CACLC,cAAeX,KAAKE,QAGvBU,MAAK,SAACT,GACH,OAAO,EAAKU,iBAAiBV,Q,kCAG7BiB,GAAS,IAAD,OAChB,OAAOX,MAAM,GAAD,OAAIT,KAAKC,SAAT,oBAAqC,CAC7Cc,OAAQ,QACRL,QAAS,CACLC,cAAeX,KAAKE,KACpB,eAAgB,oBAEpBc,KAAMC,KAAKC,UAAU,CACjBE,OAAQA,MAGXR,MAAK,SAAAT,GACF,OAAO,EAAKU,iBAAiBV,U,KAM1B,CAAQ,CACvBL,QAAS,8CACTC,IAAK,yCCjDMsB,MAnDf,SAAc5C,GACV,IAAMC,EAAcJ,IAAMK,WAAWN,GAGrC,OACI,0BAAMJ,UAAU,gBACZ,6BAASA,UAAU,WACf,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,4BAA4BqB,QAASb,EAAM6C,cACtD,yBAAKrD,UAAU,kBAAkBE,IAAG,UAAKO,GAAeA,EAAY0C,UACpE,yBAAKnD,UAAU,0BAGnB,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,gCACX,wBAAIA,UAAU,sBAAsBS,GAAeA,EAAYgB,MAC/D,uBAAGzB,UAAU,6BAA6BS,GAAeA,EAAYoC,QAEzE,4BAAQ7C,UAAU,4BAA4BqB,QAASb,EAAM8C,eACzD,yBAAKtD,UAAU,gCAAgCuD,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAC1EC,KAAK,OAAOC,MAAM,8BAClB,0BACIC,EAAE,+GACFF,KAAK,cAKzB,4BAAQ1D,UAAU,aAAaqB,QAASb,EAAMqD,YAC1C,yBAAK7D,UAAU,oBAAoBuD,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAC/EC,MAAM,8BACN,0BAAMC,EAAE,yFACJF,KAAK,aAKrB,6BAAS1D,UAAU,YACdQ,EAAMsD,MAAMC,KAAI,SAACC,GAAD,OACd,kBAAC,EAAD,CAAMpD,KAAMoD,EACZF,MAAOtD,EAAMsD,MACbtC,YAAahB,EAAMgB,YACnBM,IAAKkC,EAAKlD,IACVY,WAAYlB,EAAMkB,WAClBJ,aAAcd,EAAMc,qBCvCxB2C,MARf,WACI,OACI,4BAAQjE,UAAU,UACd,uBAAGA,UAAU,qBAAb,+BCiBGkE,MArBf,SAAuB1D,GACrB,OACF,yBAAKR,UAAS,gBAAWQ,EAAM2D,OAAS,kBAAoB,GAA9C,MACV,yBAAKnE,UAAU,kBACX,4BAAQA,UAAU,sBAAsBqB,QAASb,EAAM4D,SACnD,yBAAKpE,UAAU,4BAA4ByD,QAAQ,YAAYF,MAAM,KAAKC,OAAO,KAAKE,KAAK,OACvFC,MAAM,8BACN,0BACIC,EAAE,sNACFF,KAAK,YAGjB,wBAAI1D,UAAU,gBAAgBQ,EAAM6D,OACpC,0BAAMrE,UAAU,aAAasE,YAAU,EAACC,SAAU/D,EAAM+D,UACnD/D,EAAMgE,aCXJ,SAASC,EAAiBjE,GAAQ,IAAD,EAEpBH,IAAMqE,WAFc,mBAErCjD,EAFqC,KAE/BkD,EAF+B,OAGNtE,IAAMqE,WAHA,mBAGrCE,EAHqC,KAGxBC,EAHwB,KAItCpE,EAAcJ,IAAMK,WAAWN,GA0BrC,OAzBAC,IAAMyE,WAAU,WACRrE,IACAkE,EAAQlE,EAAYgB,MACpBoD,EAAepE,EAAYoC,UAGhC,CAACpC,IAoBA,kBAAC,EAAD,CACI4D,MAAM,4HACN5C,KAAK,IACL0C,OAAQ3D,EAAM2D,OACdC,QAAS5D,EAAM4D,QACfG,SAjBR,SAAsBQ,GAElBA,EAAEC,iBAGFxE,EAAMyE,aAAa,CACfxD,KAAMA,EACNoB,MAAO+B,KAWPM,GAAG,oBACHV,SAEI,8BAAUxE,UAAU,mBAChB,2BAAOA,UAAU,qBACb,2BAAOA,UAAU,oBAAoByB,KAAK,OAAO0D,SA7BrE,SAA0BJ,GACtBJ,EAAQI,EAAEK,OAAOC,QA4B4EC,UAAQ,EAACC,UAAU,IAAIC,UAAU,KAAKC,KAAK,OACpHC,QAAQ,kEAAgCR,GAAG,oBAAoBG,MAAO5D,IAC1E,0BAAMzB,UAAU,0BAA0BkF,GAAG,6BAEjD,2BAAOlF,UAAU,qBACb,2BAAOA,UAAU,oBAAoByB,KAAK,cAAc0D,SA/B5E,SAAiCJ,GAC7BF,EAAeE,EAAEK,OAAOC,QA8BmFC,UAAQ,EAACC,UAAU,IAAIC,UAAU,MACxHN,GAAG,qBAAqBG,MAAOT,IACnC,0BAAM5E,UAAU,0BAA0BkF,GAAG,8BAEjD,4BAAQlF,UAAU,4BAA4ByF,KAAK,UAAnD,6DCrDL,SAASE,EAAgBnF,GACpC,IAAMe,EAAOlB,IAAMuF,YAMnB,OACA,kBAAC,EAAD,CACIxB,QAAS5D,EAAM4D,QACfD,OAAQ3D,EAAM2D,OACdI,SATJ,SAAsBQ,GAClBA,EAAEC,iBACFxE,EAAMqF,eAAetE,EAAKuE,QAAQT,OAClC9D,EAAKuE,QAAQT,MAAM,IAOnBhB,MAAM,wFACN5C,KAAK,IACLyD,GAAG,qBACHV,SAEI,8BAAUxE,UAAU,mBAChB,2BAAOA,UAAU,qBACb,2BAAOA,UAAU,oBAAoBsF,UAAQ,EAAC7D,KAAK,OAAOgE,KAAK,MAC3DM,YAAY,qGAAqBb,GAAG,qBAAqBc,IAAKzE,IAClE,0BAAMvB,UAAU,0BAA0BkF,GAAG,8BAEjD,4BAAQlF,UAAU,4BAA4ByF,KAAK,UAAnD,6DCvBD,SAASQ,EAAczF,GAClC,IAAMiB,EAAOpB,IAAMuF,YACbrE,EAAOlB,IAAMuF,YAWnB,OACI,kBAAC,EAAD,CACIvB,MAAM,gEACN5C,KAAK,MACLyD,GAAG,oBACHf,OAAQ3D,EAAM2D,OACdC,QAAS5D,EAAM4D,QACfG,SAjBR,SAAsBQ,GAClBA,EAAEC,iBACFxE,EAAMqD,WAAW,CACbpC,KAAMA,EAAKqE,QAAQT,MACnB9D,KAAMA,EAAKuE,QAAQT,QAEvB9D,EAAKuE,QAAQT,MAAQ,GACrB5D,EAAKqE,QAAQT,MAAQ,IAWjBb,SAEI,8BAAUxE,UAAU,mBAChB,2BAAOA,UAAU,qBACb,2BAAOA,UAAU,oBAAoBgG,IAAKvE,EAAM6D,UAAQ,EAACC,UAAU,IAAIC,UAAU,KAAKC,KAAK,OAAOhE,KAAK,OACnGsE,YAAY,mDAAWb,GAAG,sBAE9B,0BAAMlF,UAAU,0BAA0BkF,GAAG,6BAEjD,2BAAOlF,UAAU,qBACb,2BAAOA,UAAU,oBAAoBgG,IAAKzE,EAAM+D,UAAQ,EAAC7D,KAAK,OAAOgE,KAAK,MACtEM,YAAY,qGAAqBb,GAAG,uBAExC,0BAAMlF,UAAU,0BAA0BkF,GAAG,8BAEjD,4BAAQlF,UAAU,4BAA4ByF,KAAK,UAAnD,iDClBLS,MAnBf,SAAoB1F,GAChB,OACI,yBAAKR,UAAS,gBAAWQ,EAAMI,KAAO,kBAAoB,IAAMsE,GAAG,mBACnE,yBAAKlF,UAAU,4BACX,4BAAQA,UAAU,sBAAsBqB,QAASb,EAAM4D,SACnD,yBAAKpE,UAAU,4BAA4ByD,QAAQ,YAAYF,MAAM,KAAKC,OAAO,KAAKE,KAAK,OACvFC,MAAM,8BACN,0BACIC,EAAE,sNACFF,KAAK,YAGjB,yBAAK1D,UAAU,eAAeE,IAAG,UAAKM,EAAMI,KAAOJ,EAAMI,KAAKW,KAAO,MACrE,uBAAGvB,UAAU,kBAAkBQ,EAAMI,KAAOJ,EAAMI,KAAKa,KAAO,OC+G3D0E,MAjHf,SAAa3F,GAAQ,IAAD,EAC4CH,IAAMqE,UAAS,GAD3D,mBACT0B,EADS,KACeC,EADf,OAEsChG,IAAMqE,UAAS,GAFrD,mBAET4B,EAFS,KAEYC,EAFZ,OAG0ClG,IAAMqE,UAAS,GAHzD,mBAGT8B,EAHS,KAGcC,EAHd,OAI0BpG,IAAMqE,SAAS,MAJzC,mBAITgC,EAJS,KAIKC,EAJL,OAKsBtG,IAAMqE,SAAS,MALrC,mBAKTjE,EALS,KAKImG,EALJ,OAMUvG,IAAMqE,SAAS,IANzB,mBAMTZ,EANS,KAMF+C,EANE,KAqDhB,SAASC,IACLP,GAAuB,GACvBF,GAA0B,GAC1BI,GAAyB,GACzBE,EAAkB,MA8BtB,OA7EAtG,IAAMyE,WAAU,WACZlD,EAAImF,kBAAkBpE,MAAK,SAACqE,GACxBH,EAASG,MACVC,OAAM,SAACC,GACNC,QAAQC,IAAIF,QAEjB,IAEH7G,IAAMyE,WAAU,WACZlD,EAAIyF,iBAAiB1E,MAAK,SAAC2E,GACvBV,EAAeU,MAChBL,OAAM,SAACC,GACNC,QAAQC,IAAIF,QAEjB,IAgEC,yBAAKlH,UAAU,OACX,yBAAKA,UAAU,QACX,kBAACI,EAAmBmH,SAApB,CAA6BlC,MAAO5E,GAChC,kBAAC,EAAD,MACA,kBAAC,EAAD,CACIqD,MAAOA,EACPR,cA/CpB,WACI+C,GAA0B,IA+CVxC,WA7CpB,WACI0C,GAAuB,IA6CPlD,aApDpB,WACIoD,GAAyB,IAoDTjF,YAxDpB,SAAyBZ,GACrB+F,EAAkB/F,IAwDFc,WAzEpB,SAAwBd,GAEpB,IAAMI,EAAUJ,EAAKK,MAAMC,MAAK,SAAAC,GAAC,OAAIA,EAAEL,MAAQL,EAAYK,OAE3Dc,EAAI4F,qBAAqB5G,EAAKE,KAAME,GAAS2B,MAAK,SAAC8E,GAE/C,IAAMC,EAAW5D,EAAMC,KAAI,SAAC4D,GAAD,OAAOA,EAAE7G,MAAQF,EAAKE,IAAM2G,EAAUE,KAEjEd,EAASa,OAkEGpG,aA/DpB,SAA0BV,GACtBgB,EAAIgG,WAAWhH,EAAKE,KAAK6B,MAAK,WAC1BkE,EAAS/C,EAAM+D,QAAO,SAAA7D,GAAI,OAAIA,GAAQpD,YA+D9B,kBAAC,EAAD,MAEA,kBAACqF,EAAD,CAAe9B,OAAQmC,EAAqBlC,QAAS0C,EAAgBjD,WAzBrF,SAA8BiE,GAC1BlG,EAAImG,YAAYD,GAAMnF,MAAK,SAAC8E,GACxBZ,EAAS,CAACY,GAAF,mBAAc3D,QACvBnB,MAAK,WACJmE,OACDG,OAAM,SAACC,GACNC,QAAQC,IAAIF,SAoBJ,kBAACzC,EAAD,CAAkBN,OAAQiC,EAAwBhC,QAAS0C,EAAgB7B,aA7C3F,SAA0B6C,GAEtBlG,EAAIoG,iBAAiBF,GAAMnF,MAAK,SAACsF,GAC7BrB,EAAeqB,MAChBtF,MAAK,WACJmE,OACDG,OAAM,SAACC,GACNC,QAAQC,IAAIF,SAuCJ,kBAACvB,EAAD,CAAiBxB,OAAQqC,EAAuBpC,QAAS0C,EAAgBjB,eApCzF,SAA4BiC,GACxBlG,EAAIsG,YAAYJ,GAAMnF,MAAK,SAACsF,GACxBrB,EAAeqB,MAChBtF,MAAK,WACJmE,OACDG,OAAM,SAACC,GACNC,QAAQC,IAAIF,SA+BJ,kBAAC,EAAD,CAAYtG,KAAM8F,EAActC,QAAS0C,QC3GzCqB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBpG,MAAK,SAAAqG,GACJA,EAAaC,gBAEdhC,OAAM,SAAAiC,GACL/B,QAAQ+B,MAAMA,EAAMC,a,sCEzI5BC,EAAOC,QAAU,IAA0B,2C","file":"static/js/main.9755cb68.chunk.js","sourcesContent":["import React from 'react';\r\nimport headerLogo from '../images/header__logo.svg';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className=\"header\">\r\n            <img className=\"header__logo\" alt=\"mesto-russia\" src={headerLogo}></img>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nexport const CurrentUserContext = React.createContext();\r\n\r\n\r\n","import React from 'react';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction Card(props) {\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n    function handleClick() {\r\n        props.onCardClick(props.card);\r\n    }\r\n    function handleLikeClick() {\r\n        props.onCardLike(props.card);\r\n    }\r\n    function handleDeleteClick() {\r\n        props.onCardDelete(props.card)\r\n    }\r\n\r\n    const isOwn = props.card.owner._id === currentUser._id;\r\n\r\n    const cardDeleteButtonClassName = (\r\n        `${isOwn ? 'element__delete-button_visible' : 'element__delete-button_hidden'}`\r\n    );\r\n    const isLiked = props.card.likes.some(i => i._id === currentUser._id);\r\n\r\n\r\n    const cardLikeButtonClassName = (`${isLiked ? 'element__like-button_active element__like-button' : 'element__like-button'}`);\r\n\r\n    return (\r\n        <div className=\"element\">\r\n            <button className={cardDeleteButtonClassName} onClick={handleDeleteClick}></button>\r\n            <img className=\"element__image\" src={`${props.card.link}`} onClick={handleClick}></img>\r\n            <div className=\"element__container\">\r\n                <h2 className=\"element__description\">{props.card.name}</h2>\r\n                <div className=\"element__like-element\">\r\n                    <button className={cardLikeButtonClassName} onClick={handleLikeClick}></button>\r\n                    <p className=\"element__like-counter\">{props.card.likes.length}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","class Api {\r\n    constructor({ baseURL, key }) {\r\n        this._baseURL = baseURL;\r\n        this._key = key;\r\n    }\r\n    _getResponseData(res) {\r\n        if (res.ok) {\r\n            return res.json();\r\n        }\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n    }\r\n    getInitialCards() {\r\n        return fetch(`${this._baseURL}/cards`, {\r\n            headers: {\r\n                authorization: this._key\r\n            }\r\n        })\r\n            .then(res => {\r\n                return this._getResponseData(res);\r\n            })\r\n    }\r\n    getProfileInfo() {\r\n        return fetch(`${this._baseURL}/users/me`, {\r\n            headers: {\r\n                authorization: this._key\r\n            }\r\n        })\r\n            .then(res => {\r\n                return this._getResponseData(res);\r\n            })\r\n    }\r\n    patchProfileInfo({ name, about }) {\r\n        return fetch(`${this._baseURL}/users/me`, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                authorization: this._key,\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                name: name,\r\n                about: about\r\n            })\r\n        })\r\n            .then(res => {\r\n                return this._getResponseData(res);\r\n            })\r\n            \r\n    }\r\n    postNewCard({ name, link }) {\r\n        return fetch(`${this._baseURL}/cards`, {\r\n            method: 'POST',\r\n            headers: {\r\n                authorization: this._key,\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                name: name,\r\n                link: link\r\n            })\r\n        })\r\n            .then((res) => {\r\n                return this._getResponseData(res);\r\n            })\r\n    }\r\n    changeLikeCardStatus(cardId, isLiked) {\r\n        return fetch(`${this._baseURL}/cards/likes/${cardId}`, {\r\n            method: `${isLiked ? 'PUT' : 'DELETE'}`,\r\n            headers: {\r\n                authorization: this._key\r\n            }\r\n        })\r\n            .then((res) => {\r\n                return this._getResponseData(res);\r\n            })\r\n    }   \r\n    deleteCard(cardId) {\r\n        return fetch(`${this._baseURL}/cards/${cardId}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                authorization: this._key\r\n            }\r\n        })\r\n            .then((res) => {\r\n                return this._getResponseData(res);\r\n            })\r\n    }\r\n    patchAvatar(avatar) {\r\n        return fetch(`${this._baseURL}/users/me/avatar`, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                authorization: this._key,\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                avatar: avatar\r\n            })\r\n        })\r\n            .then(res => {\r\n                return this._getResponseData(res);\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const api = new Api({\r\n    baseURL: 'https://mesto.nomoreparties.co/v1/cohort-12',\r\n    key: 'cb60a489-6ec1-4e08-8c6a-5f804e99b68e'\r\n  }); ","import React, { useReducer } from 'react';\r\nimport Card from './Card'\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\nimport { api } from '../utils/Api'\r\n\r\n\r\nfunction Main(props) {\r\n    const currentUser = React.useContext(CurrentUserContext);    \r\n    \r\n\r\n    return (\r\n        <main className=\"main-content\">\r\n            <section className=\"profile\">\r\n                <div className=\"profile__container\">\r\n                    <div className=\"profile__avatar-container\" onClick={props.onEditAvatar}>\r\n                        <img className=\"profile__avatar\" src={`${currentUser && currentUser.avatar}`}></img>\r\n                        <div className=\"profile__avatar-icon\"></div>\r\n                    </div>\r\n\r\n                    <div className=\"profile__info\">\r\n                        <div className=\"profile__info-text-container\">\r\n                            <h1 className=\"profile__info-name\">{currentUser && currentUser.name}</h1>\r\n                            <p className=\"profile__info-description\">{currentUser && currentUser.about}</p>\r\n                        </div>\r\n                        <button className=\"profile__info-edit-button\" onClick={props.onEditProfile}>\r\n                            <svg className=\"profile__info-edit-button-img\" width=\"10\" height=\"10\" viewBox=\"0 0 10 10\"\r\n                                fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path\r\n                                    d=\"M10 1.32827L2.60377 8.7666L1.28302 7.41936L8.66038 0L10 1.32827ZM0 10L1.96226 9.41177L0.584906 8.08349L0 10Z\"\r\n                                    fill=\"white\" />\r\n                            </svg>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <button className=\"add-button\" onClick={props.onAddPlace}>\r\n                    <svg className=\"add-button__image\" width=\"22\" height=\"22\" viewBox=\"0 0 22 22\" fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path d=\"M22 9.77778H12.2222V0H9.77778V9.77778H0V12.2222H9.77778V22H12.2222V12.2222H22V9.77778Z\"\r\n                            fill=\"white\" />\r\n                    </svg>\r\n                </button>\r\n            </section>\r\n\r\n            <section className=\"elements\">\r\n                {props.cards.map((item) => (\r\n                   <Card card={item}\r\n                   cards={props.cards}\r\n                   onCardClick={props.onCardClick} \r\n                   key={item._id} \r\n                   onCardLike={props.onCardLike} \r\n                   onCardDelete={props.onCardDelete} />\r\n                ))}\r\n            </section>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <p className=\"footer__copyright\">&#169; 2020 Danilkin Nikita</p>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nfunction PopupWithForm(props) {    \r\n  return (\r\n<div className={`popup ${props.isOpen ? 'popup_is-opened' : ''} `}>\r\n    <div className=\"popup__content\">\r\n        <button className=\"popup__close-button\" onClick={props.onClose}>\r\n            <svg className=\"popup__close-button-image\" viewBox=\"0 0 34 34\" width=\"33\" height=\"33\" fill=\"none\"\r\n                xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path\r\n                    d=\"M32.7661 29.5683L19.9759 16.778L32.7661 3.98779L29.5686 0.790236L16.7783 13.5805L3.98808 0.790236L0.790527 3.98779L13.5808 16.778L0.790527 29.5683L3.98808 32.7658L16.7783 19.9756L29.5686 32.7658L32.7661 29.5683Z\"\r\n                    fill=\"white\" />\r\n            </svg>\r\n        </button>\r\n        <h2 className=\"popup__title\">{props.title}</h2>\r\n        <form className=\"popup-form\" noValidate onSubmit={props.onSubmit}>\r\n            {props.children}\r\n        </form>\r\n    </div>\r\n</div>\r\n  );\r\n}\r\n\r\nexport default PopupWithForm;\r\n","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\n\r\nexport default function EditProfilePopup(props) {\r\n    \r\n    const [name, setName] = React.useState();\r\n    const [description, setDescription] = React.useState();\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n    React.useEffect(() => {\r\n        if (currentUser) {\r\n            setName(currentUser.name);\r\n            setDescription(currentUser.about);\r\n        }\r\n\r\n    }, [currentUser]);\r\n\r\n    function handleChangeName(e) {\r\n        setName(e.target.value); \r\n    }\r\n    function handleChangeDescription(e) {       \r\n        setDescription(e.target.value);\r\n    }\r\n    function handleSubmit(e) {\r\n\r\n        e.preventDefault();\r\n\r\n\r\n        props.onUpdateUser({\r\n            name: name,\r\n            about: description,\r\n        });\r\n    }\r\n\r\n    return (\r\n        <PopupWithForm\r\n            title='Редактировать профиль'\r\n            name=' '\r\n            isOpen={props.isOpen}\r\n            onClose={props.onClose}\r\n            onSubmit={handleSubmit}\r\n            id='popup-editprofile'\r\n            children=\r\n            {\r\n                <fieldset className=\"popup-form__set\">\r\n                    <label className=\"popup-form__field\">\r\n                        <input className=\"popup-form__input\" name=\"Name\" onChange={handleChangeName} required minLength=\"2\" maxLength=\"40\" type=\"text\"\r\n                            pattern=\"[a-zA-ZА-ЯЁа-яё\\s\\-]+[^\\s\\-]+\" id=\"first-field-input\" value={name}></input>\r\n                        <span className='popup-form__input-error' id='first-field-input-error'></span>\r\n                    </label>\r\n                    <label className=\"popup-form__field\">\r\n                        <input className=\"popup-form__input\" name=\"Description\" onChange={handleChangeDescription} required minLength=\"2\" maxLength=\"200\"\r\n                            id=\"second-field-input\" value={description}></input>\r\n                        <span className='popup-form__input-error' id='second-field-input-error'></span>\r\n                    </label>\r\n                    <button className=\"popup-form__submit button\" type=\"submit\">Сохранить</button>\r\n                </fieldset>\r\n            }\r\n        />\r\n    )\r\n}","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nexport default function EditAvatarPopup(props) {\r\n    const link = React.createRef();\r\n    function handleSubmit(e) {\r\n        e.preventDefault();      \r\n        props.onUpdateAvatar(link.current.value);  \r\n        link.current.value='';      \r\n      }\r\n    return (\r\n    <PopupWithForm\r\n        onClose={props.onClose}\r\n        isOpen={props.isOpen}\r\n        onSubmit={handleSubmit}\r\n        title='Обновить аватар'\r\n        name=' '\r\n        id='popup-changeavatar'\r\n        children=\r\n        {\r\n            <fieldset className=\"popup-form__set\">\r\n                <label className=\"popup-form__field\">\r\n                    <input className=\"popup-form__input\" required name=\"link\" type=\"url\"\r\n                        placeholder=\"Ссылка на картинку\" id=\"second-field-input\" ref={link}></input>\r\n                    <span className=\"popup-form__input-error\" id=\"second-field-input-error\"></span>\r\n                </label>\r\n                <button className=\"popup-form__submit button\" type=\"submit\">Сохранить</button>\r\n            </fieldset>\r\n        }\r\n    />\r\n    )\r\n}","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nexport default function AddPlacePopup(props) {\r\n    const name = React.createRef();\r\n    const link = React.createRef();\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        props.onAddPlace({\r\n            name: name.current.value,\r\n            link: link.current.value\r\n        });\r\n        link.current.value = '';\r\n        name.current.value = '';\r\n    }\r\n    \r\n    return (\r\n        <PopupWithForm\r\n            title='Новое место'\r\n            name='add'\r\n            id='popup-createplace'\r\n            isOpen={props.isOpen}\r\n            onClose={props.onClose}\r\n            onSubmit={handleSubmit}\r\n            children=\r\n            {\r\n                <fieldset className=\"popup-form__set\">\r\n                    <label className=\"popup-form__field\">\r\n                        <input className=\"popup-form__input\" ref={name} required minLength=\"1\" maxLength=\"30\" type=\"text\" name=\"name\"\r\n                            placeholder=\"Название\" id=\"first-field-input\">\r\n                        </input>\r\n                        <span className=\"popup-form__input-error\" id=\"first-field-input-error\"></span>\r\n                    </label>\r\n                    <label className=\"popup-form__field\">\r\n                        <input className=\"popup-form__input\" ref={link} required name=\"link\" type=\"url\"\r\n                            placeholder=\"Ссылка на картинку\" id=\"second-field-input\">\r\n                        </input>\r\n                        <span className=\"popup-form__input-error\" id=\"second-field-input-error\"></span>\r\n                    </label>\r\n                    <button className=\"popup-form__submit button\" type=\"submit\">Создать</button>\r\n                </fieldset>\r\n            }\r\n        />\r\n    )\r\n}","import React from 'react';\r\n\r\nfunction ImagePopup(props) {\r\n    return (\r\n        <div className={`popup ${props.card ? 'popup_is-opened' : ''}`} id=\"popup-withimage\">\r\n        <div className=\"popup__withimage-content\">\r\n            <button className=\"popup__close-button\" onClick={props.onClose}>\r\n                <svg className=\"popup__close-button-image\" viewBox=\"0 0 34 34\" width=\"33\" height=\"33\" fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path\r\n                        d=\"M32.7661 29.5683L19.9759 16.778L32.7661 3.98779L29.5686 0.790236L16.7783 13.5805L3.98808 0.790236L0.790527 3.98779L13.5808 16.778L0.790527 29.5683L3.98808 32.7658L16.7783 19.9756L29.5686 32.7658L32.7661 29.5683Z\"\r\n                        fill=\"white\" />\r\n                </svg>\r\n            </button>\r\n            <img className=\"popup__image\" src={`${props.card ? props.card.link : ''}`}></img>\r\n            <p className=\"popup__caption\">{props.card ? props.card.name : ''}</p>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default ImagePopup;","import React from 'react';\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\nimport EditProfilePopup from './EditProfilePopup';\r\nimport EditAvatarPopup from './EditAvatarPopup';\r\nimport AddPlacePopup from './AddPlacePopup';\r\nimport ImagePopup from './ImagePopup';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\nimport '../index.css';\r\nimport { api } from '../utils/Api'\r\n\r\n\r\nfunction App(props) {\r\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\r\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\r\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false)\r\n    const [selectedCard, setIsSelectedCard] = React.useState(null)\r\n    const [currentUser, setCurrentUser] = React.useState(null);\r\n    const [cards, setCards] = React.useState([])\r\n\r\n\r\n\r\n    React.useEffect(() => {\r\n        api.getInitialCards().then((initialCards) => {\r\n            setCards(initialCards)\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        })\r\n    }, []);\r\n\r\n    React.useEffect(() => {\r\n        api.getProfileInfo().then((userInfo) => {\r\n            setCurrentUser(userInfo)\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        })\r\n    }, []);\r\n    function handleCardLike(card) {\r\n\r\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n\r\n        api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\r\n\r\n            const newCards = cards.map((c) => c._id === card._id ? newCard : c);\r\n\r\n            setCards(newCards);\r\n        });\r\n    }\r\n    function handleCardDelete(card) {\r\n        api.deleteCard(card._id).then(() => {            \r\n            setCards(cards.filter(item => item != card))\r\n        })\r\n    }\r\n    function handleCardClick(card) {\r\n        setIsSelectedCard(card);\r\n    }\r\n    function handleEditAvatarClick() {\r\n        setIsEditAvatarPopupOpen(true);\r\n    }\r\n    function handleEditProfileClick() {\r\n        setIsEditProfilePopupOpen(true)\r\n    }\r\n    function handleAddPlaceClick() {\r\n        setIsAddPlacePopupOpen(true)\r\n    }\r\n    function closeAllPopups() {\r\n        setIsAddPlacePopupOpen(false);\r\n        setIsEditProfilePopupOpen(false);\r\n        setIsEditAvatarPopupOpen(false);\r\n        setIsSelectedCard(null);\r\n    }\r\n    function handleUpdateUser(data) {\r\n\r\n        api.patchProfileInfo(data).then((info) => {            \r\n            setCurrentUser(info)\r\n        }).then(() => {\r\n            closeAllPopups()\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        })\r\n    }\r\n    function handleUpdateAvatar(data) {\r\n        api.patchAvatar(data).then((info) => {\r\n            setCurrentUser(info)\r\n        }).then(() => {\r\n            closeAllPopups()\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        })\r\n    }\r\n    function handleAddPlaceSubmit(data) {\r\n        api.postNewCard(data).then((newCard) => {\r\n            setCards([newCard, ...cards]);\r\n        }).then(() => {\r\n            closeAllPopups()\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"App\">\r\n            <div className=\"page\">\r\n                <CurrentUserContext.Provider value={currentUser}>\r\n                    <Header />\r\n                    <Main\r\n                        cards={cards}\r\n                        onEditProfile={handleEditProfileClick}\r\n                        onAddPlace={handleAddPlaceClick}\r\n                        onEditAvatar={handleEditAvatarClick}\r\n                        onCardClick={handleCardClick}\r\n                        onCardLike={handleCardLike}\r\n                        onCardDelete={handleCardDelete}\r\n                    />\r\n                    <Footer />\r\n\r\n                    <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onAddPlace={handleAddPlaceSubmit} />\r\n                    <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} />\r\n                    <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar} />\r\n                    <ImagePopup card={selectedCard} onClose={closeAllPopups} />\r\n                </CurrentUserContext.Provider>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/header__logo.855a8c98.svg\";"],"sourceRoot":""}